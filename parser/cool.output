Terminals unused in grammar

    ERROR


State 10 conflicts: 1 shift/reduce
State 16 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 71 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 103 conflicts: 1 shift/reduce
State 104 conflicts: 1 shift/reduce
State 107 conflicts: 9 shift/reduce
State 130 conflicts: 1 shift/reduce
State 136 conflicts: 9 shift/reduce
State 148 conflicts: 9 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | error

    7 feature: OBJECTID ':' TYPEID ';'
    8        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' ';'
    9        | OBJECTID ':' TYPEID ASSIGN expression ';'

   10 feature_list: ε
   11             | feature
   12             | feature_list feature
   13             | error ';'

   14 formal: OBJECTID ':' TYPEID

   15 formal_list: ε
   16            | formal
   17            | formal_list ',' formal

   18 expression: INT_CONST
   19           | STR_CONST
   20           | BOOL_CONST
   21           | expression '+' expression
   22           | expression '-' expression
   23           | expression '*' expression
   24           | expression '/' expression
   25           | expression '=' expression
   26           | '~' expression
   27           | expression '<' expression
   28           | expression LE expression
   29           | OBJECTID
   30           | OBJECTID ':' TYPEID ASSIGN expression
   31           | OBJECTID ASSIGN expression
   32           | NOT expression
   33           | '(' expression ')'
   34           | '{' expression_block '}'
   35           | LET let_list
   36           | if
   37           | dispatch
   38           | while
   39           | typecase
   40           | new
   41           | is_void
   42           | error

   43 let_list: OBJECTID ':' TYPEID IN expression
   44         | OBJECTID ':' TYPEID ASSIGN expression IN expression
   45         | OBJECTID ':' TYPEID ',' let_list
   46         | OBJECTID ':' TYPEID ASSIGN expression ',' let_list

   47 expression_list: ε
   48                | expression
   49                | expression_list ',' expression

   50 expression_block: expression ';'
   51                 | expression_block expression ';'
   52                 | error

   53 new: NEW TYPEID

   54 is_void: ISVOID expression

   55 branch: OBJECTID ':' TYPEID DARROW expression ';'

   56 branch_list: branch
   57            | branch_list branch

   58 typecase: CASE expression OF branch_list ESAC

   59 while: WHILE expression LOOP expression POOL

   60 dispatch: OBJECTID '(' expression_list ')'
   61         | expression '.' OBJECTID '(' expression_list ')'
   62         | expression '@' TYPEID '.' OBJECTID '(' expression_list ')'

   63 if: IF expression THEN expression ELSE expression FI


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 8 33 60 61 62
    ')' (41) 8 33 60 61 62
    '*' (42) 23
    '+' (43) 21
    ',' (44) 17 45 46 49
    '-' (45) 22
    '.' (46) 61 62
    '/' (47) 24
    ':' (58) 7 8 9 14 30 43 44 45 46 55
    ';' (59) 4 5 7 8 9 13 50 51 55
    '<' (60) 27
    '=' (61) 25
    '@' (64) 62
    '{' (123) 4 5 8 34
    '}' (125) 4 5 8 34
    '~' (126) 26
    error (256) 6 13 42 52
    CLASS (258) 4 5
    ELSE (259) 63
    FI (260) 63
    IF (261) 63
    IN (262) 43 44
    INHERITS (263) 5
    LET (264) 35
    LOOP (265) 59
    POOL (266) 59
    THEN (267) 63
    WHILE (268) 59
    CASE (269) 58
    ESAC (270) 58
    OF (271) 58
    DARROW (272) 55
    NEW (273) 53
    ISVOID (274) 54
    STR_CONST <symbol> (275) 19
    INT_CONST <symbol> (276) 18
    BOOL_CONST <boolean> (277) 20
    TYPEID <symbol> (278) 4 5 7 8 9 14 30 43 44 45 46 53 55 62
    OBJECTID <symbol> (279) 7 8 9 14 29 30 31 43 44 45 46 55 60 61 62
    ASSIGN (280) 9 30 31 44 46
    NOT (281) 32
    LE (282) 28
    ERROR (283)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program <program> (46)
        on left: 1
        on right: 0
    class_list <classes> (47)
        on left: 2 3
        on right: 1 3
    class <class_> (48)
        on left: 4 5 6
        on right: 2 3
    feature <feature> (49)
        on left: 7 8 9
        on right: 11 12
    feature_list <features> (50)
        on left: 10 11 12 13
        on right: 4 5 12
    formal <formal> (51)
        on left: 14
        on right: 16 17
    formal_list <formals> (52)
        on left: 15 16 17
        on right: 8 17
    expression <expression> (53)
        on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 8 9 21 22 23 24 25 26 27 28 30 31 32 33 43 44 46 48 49 50 51 54 55 58 59 61 62 63
    let_list <expression> (54)
        on left: 43 44 45 46
        on right: 35 45 46
    expression_list <expressions> (55)
        on left: 47 48 49
        on right: 49 60 61 62
    expression_block <expressions> (56)
        on left: 50 51 52
        on right: 34 51
    new <expression> (57)
        on left: 53
        on right: 40
    is_void <expression> (58)
        on left: 54
        on right: 41
    branch <case_> (59)
        on left: 55
        on right: 56 57
    branch_list <cases> (60)
        on left: 56 57
        on right: 57 58
    typecase <expression> (61)
        on left: 58
        on right: 39
    while <expression> (62)
        on left: 59
        on right: 38
    dispatch <expression> (63)
        on left: 60 61 62
        on right: 37
    if <expression> (64)
        on left: 63
        on right: 36


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    program     go to state 3
    class_list  go to state 4
    class       go to state 5


State 1

    6 class: error •

    $default  reduce using rule 6 (class)


State 2

    4 class: CLASS • TYPEID '{' feature_list '}' ';'
    5      | CLASS • TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 6


State 3

    0 $accept: program • $end

    $end  shift, and go to state 7


State 4

    1 program: class_list •
    3 class_list: class_list • class

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    $end  reduce using rule 1 (program)

    class  go to state 8


State 5

    2 class_list: class •

    $default  reduce using rule 2 (class_list)


State 6

    4 class: CLASS TYPEID • '{' feature_list '}' ';'
    5      | CLASS TYPEID • INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 9
    '{'       shift, and go to state 10


State 7

    0 $accept: program $end •

    $default  accept


State 8

    3 class_list: class_list class •

    $default  reduce using rule 3 (class_list)


State 9

    5 class: CLASS TYPEID INHERITS • TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 11


State 10

    4 class: CLASS TYPEID '{' • feature_list '}' ';'

    error     shift, and go to state 12
    OBJECTID  shift, and go to state 13

    OBJECTID  [reduce using rule 10 (feature_list)]
    '}'       reduce using rule 10 (feature_list)

    feature       go to state 14
    feature_list  go to state 15


State 11

    5 class: CLASS TYPEID INHERITS TYPEID • '{' feature_list '}' ';'

    '{'  shift, and go to state 16


State 12

   13 feature_list: error • ';'

    ';'  shift, and go to state 17


State 13

    7 feature: OBJECTID • ':' TYPEID ';'
    8        | OBJECTID • '(' formal_list ')' ':' TYPEID '{' expression '}' ';'
    9        | OBJECTID • ':' TYPEID ASSIGN expression ';'

    ':'  shift, and go to state 18
    '('  shift, and go to state 19


State 14

   11 feature_list: feature •

    $default  reduce using rule 11 (feature_list)


State 15

    4 class: CLASS TYPEID '{' feature_list • '}' ';'
   12 feature_list: feature_list • feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 20

    feature  go to state 21


State 16

    5 class: CLASS TYPEID INHERITS TYPEID '{' • feature_list '}' ';'

    error     shift, and go to state 12
    OBJECTID  shift, and go to state 13

    OBJECTID  [reduce using rule 10 (feature_list)]
    '}'       reduce using rule 10 (feature_list)

    feature       go to state 14
    feature_list  go to state 22


State 17

   13 feature_list: error ';' •

    $default  reduce using rule 13 (feature_list)


State 18

    7 feature: OBJECTID ':' • TYPEID ';'
    9        | OBJECTID ':' • TYPEID ASSIGN expression ';'

    TYPEID  shift, and go to state 23


State 19

    8 feature: OBJECTID '(' • formal_list ')' ':' TYPEID '{' expression '}' ';'

    OBJECTID  shift, and go to state 24

    $default  reduce using rule 15 (formal_list)

    formal       go to state 25
    formal_list  go to state 26


State 20

    4 class: CLASS TYPEID '{' feature_list '}' • ';'

    ';'  shift, and go to state 27


State 21

   12 feature_list: feature_list feature •

    $default  reduce using rule 12 (feature_list)


State 22

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list • '}' ';'
   12 feature_list: feature_list • feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 28

    feature  go to state 21


State 23

    7 feature: OBJECTID ':' TYPEID • ';'
    9        | OBJECTID ':' TYPEID • ASSIGN expression ';'

    ASSIGN  shift, and go to state 29
    ';'     shift, and go to state 30


State 24

   14 formal: OBJECTID • ':' TYPEID

    ':'  shift, and go to state 31


State 25

   16 formal_list: formal •

    $default  reduce using rule 16 (formal_list)


State 26

    8 feature: OBJECTID '(' formal_list • ')' ':' TYPEID '{' expression '}' ';'
   17 formal_list: formal_list • ',' formal

    ')'  shift, and go to state 32
    ','  shift, and go to state 33


State 27

    4 class: CLASS TYPEID '{' feature_list '}' ';' •

    $default  reduce using rule 4 (class)


State 28

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' • ';'

    ';'  shift, and go to state 34


State 29

    9 feature: OBJECTID ':' TYPEID ASSIGN • expression ';'

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 50
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 30

    7 feature: OBJECTID ':' TYPEID ';' •

    $default  reduce using rule 7 (feature)


State 31

   14 formal: OBJECTID ':' • TYPEID

    TYPEID  shift, and go to state 57


State 32

    8 feature: OBJECTID '(' formal_list ')' • ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 58


State 33

   17 formal_list: formal_list ',' • formal

    OBJECTID  shift, and go to state 24

    formal  go to state 59


State 34

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' •

    $default  reduce using rule 5 (class)


State 35

   42 expression: error •

    $default  reduce using rule 42 (expression)


State 36

   63 if: IF • expression THEN expression ELSE expression FI

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 60
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 37

   35 expression: LET • let_list

    OBJECTID  shift, and go to state 61

    let_list  go to state 62


State 38

   59 while: WHILE • expression LOOP expression POOL

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 63
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 39

   58 typecase: CASE • expression OF branch_list ESAC

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 64
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 40

   53 new: NEW • TYPEID

    TYPEID  shift, and go to state 65


State 41

   54 is_void: ISVOID • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 66
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 42

   19 expression: STR_CONST •

    $default  reduce using rule 19 (expression)


State 43

   18 expression: INT_CONST •

    $default  reduce using rule 18 (expression)


State 44

   20 expression: BOOL_CONST •

    $default  reduce using rule 20 (expression)


State 45

   29 expression: OBJECTID •
   30           | OBJECTID • ':' TYPEID ASSIGN expression
   31           | OBJECTID • ASSIGN expression
   60 dispatch: OBJECTID • '(' expression_list ')'

    ASSIGN  shift, and go to state 67
    ':'     shift, and go to state 68
    '('     shift, and go to state 69

    $default  reduce using rule 29 (expression)


State 46

   32 expression: NOT • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 70
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 47

   26 expression: '~' • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 71
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 48

   34 expression: '{' • expression_block '}'

    error       shift, and go to state 72
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression        go to state 73
    expression_block  go to state 74
    new               go to state 51
    is_void           go to state 52
    typecase          go to state 53
    while             go to state 54
    dispatch          go to state 55
    if                go to state 56


State 49

   33 expression: '(' • expression ')'

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 75
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 50

    9 feature: OBJECTID ':' TYPEID ASSIGN expression • ';'
   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    ';'  shift, and go to state 84
    '<'  shift, and go to state 85


State 51

   40 expression: new •

    $default  reduce using rule 40 (expression)


State 52

   41 expression: is_void •

    $default  reduce using rule 41 (expression)


State 53

   39 expression: typecase •

    $default  reduce using rule 39 (expression)


State 54

   38 expression: while •

    $default  reduce using rule 38 (expression)


State 55

   37 expression: dispatch •

    $default  reduce using rule 37 (expression)


State 56

   36 expression: if •

    $default  reduce using rule 36 (expression)


State 57

   14 formal: OBJECTID ':' TYPEID •

    $default  reduce using rule 14 (formal)


State 58

    8 feature: OBJECTID '(' formal_list ')' ':' • TYPEID '{' expression '}' ';'

    TYPEID  shift, and go to state 86


State 59

   17 formal_list: formal_list ',' formal •

    $default  reduce using rule 17 (formal_list)


State 60

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'
   63 if: IF expression • THEN expression ELSE expression FI

    THEN  shift, and go to state 87
    LE    shift, and go to state 76
    '='   shift, and go to state 77
    '+'   shift, and go to state 78
    '-'   shift, and go to state 79
    '*'   shift, and go to state 80
    '/'   shift, and go to state 81
    '@'   shift, and go to state 82
    '.'   shift, and go to state 83
    '<'   shift, and go to state 85


State 61

   43 let_list: OBJECTID • ':' TYPEID IN expression
   44         | OBJECTID • ':' TYPEID ASSIGN expression IN expression
   45         | OBJECTID • ':' TYPEID ',' let_list
   46         | OBJECTID • ':' TYPEID ASSIGN expression ',' let_list

    ':'  shift, and go to state 88


State 62

   35 expression: LET let_list •

    $default  reduce using rule 35 (expression)


State 63

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   59 while: WHILE expression • LOOP expression POOL
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LOOP  shift, and go to state 89
    LE    shift, and go to state 76
    '='   shift, and go to state 77
    '+'   shift, and go to state 78
    '-'   shift, and go to state 79
    '*'   shift, and go to state 80
    '/'   shift, and go to state 81
    '@'   shift, and go to state 82
    '.'   shift, and go to state 83
    '<'   shift, and go to state 85


State 64

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   58 typecase: CASE expression • OF branch_list ESAC
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    OF   shift, and go to state 90
    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85


State 65

   53 new: NEW TYPEID •

    $default  reduce using rule 53 (new)


State 66

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   54 is_void: ISVOID expression •
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    '<'       [reduce using rule 54 (is_void)]
    $default  reduce using rule 54 (is_void)


State 67

   31 expression: OBJECTID ASSIGN • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 91
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 68

   30 expression: OBJECTID ':' • TYPEID ASSIGN expression

    TYPEID  shift, and go to state 92


State 69

   60 dispatch: OBJECTID '(' • expression_list ')'

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    ')'  reduce using rule 47 (expression_list)
    ','  reduce using rule 47 (expression_list)

    expression       go to state 93
    expression_list  go to state 94
    new              go to state 51
    is_void          go to state 52
    typecase         go to state 53
    while            go to state 54
    dispatch         go to state 55
    if               go to state 56


State 70

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   32           | NOT expression •
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    '<'       [reduce using rule 32 (expression)]
    $default  reduce using rule 32 (expression)


State 71

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   26           | '~' expression •
   27           | expression • '<' expression
   28           | expression • LE expression
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    '<'       [reduce using rule 26 (expression)]
    $default  reduce using rule 26 (expression)


State 72

   42 expression: error •
   52 expression_block: error •

    LE        reduce using rule 42 (expression)
    '='       reduce using rule 42 (expression)
    '+'       reduce using rule 42 (expression)
    '-'       reduce using rule 42 (expression)
    '*'       reduce using rule 42 (expression)
    '/'       reduce using rule 42 (expression)
    '@'       reduce using rule 42 (expression)
    '.'       reduce using rule 42 (expression)
    ';'       reduce using rule 42 (expression)
    '<'       reduce using rule 42 (expression)
    $default  reduce using rule 52 (expression_block)


State 73

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   50 expression_block: expression • ';'
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    ';'  shift, and go to state 95
    '<'  shift, and go to state 85


State 74

   34 expression: '{' expression_block • '}'
   51 expression_block: expression_block • expression ';'

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '}'         shift, and go to state 96
    '('         shift, and go to state 49

    expression  go to state 97
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 75

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   33           | '(' expression • ')'
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    ')'  shift, and go to state 98
    '<'  shift, and go to state 85


State 76

   28 expression: expression LE • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 99
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 77

   25 expression: expression '=' • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 100
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 78

   21 expression: expression '+' • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 101
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 79

   22 expression: expression '-' • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 102
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 80

   23 expression: expression '*' • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 103
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 81

   24 expression: expression '/' • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 104
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 82

   62 dispatch: expression '@' • TYPEID '.' OBJECTID '(' expression_list ')'

    TYPEID  shift, and go to state 105


State 83

   61 dispatch: expression '.' • OBJECTID '(' expression_list ')'

    OBJECTID  shift, and go to state 106


State 84

    9 feature: OBJECTID ':' TYPEID ASSIGN expression ';' •

    $default  reduce using rule 9 (feature)


State 85

   27 expression: expression '<' • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 107
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 86

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID • '{' expression '}' ';'

    '{'  shift, and go to state 108


State 87

   63 if: IF expression THEN • expression ELSE expression FI

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 109
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 88

   43 let_list: OBJECTID ':' • TYPEID IN expression
   44         | OBJECTID ':' • TYPEID ASSIGN expression IN expression
   45         | OBJECTID ':' • TYPEID ',' let_list
   46         | OBJECTID ':' • TYPEID ASSIGN expression ',' let_list

    TYPEID  shift, and go to state 110


State 89

   59 while: WHILE expression LOOP • expression POOL

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 111
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 90

   58 typecase: CASE expression OF • branch_list ESAC

    OBJECTID  shift, and go to state 112

    branch       go to state 113
    branch_list  go to state 114


State 91

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   31           | OBJECTID ASSIGN expression •
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    '<'       [reduce using rule 31 (expression)]
    $default  reduce using rule 31 (expression)


State 92

   30 expression: OBJECTID ':' TYPEID • ASSIGN expression

    ASSIGN  shift, and go to state 115


State 93

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   48 expression_list: expression •
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    $default  reduce using rule 48 (expression_list)


State 94

   49 expression_list: expression_list • ',' expression
   60 dispatch: OBJECTID '(' expression_list • ')'

    ')'  shift, and go to state 116
    ','  shift, and go to state 117


State 95

   50 expression_block: expression ';' •

    $default  reduce using rule 50 (expression_block)


State 96

   34 expression: '{' expression_block '}' •

    $default  reduce using rule 34 (expression)


State 97

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   51 expression_block: expression_block expression • ';'
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    ';'  shift, and go to state 118
    '<'  shift, and go to state 85


State 98

   33 expression: '(' expression ')' •

    $default  reduce using rule 33 (expression)


State 99

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   28           | expression LE expression •
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    LE   error (nonassociative)
    '='  error (nonassociative)

    '<'       [reduce using rule 28 (expression)]
    $default  reduce using rule 28 (expression)


State 100

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   25           | expression '=' expression •
   27           | expression • '<' expression
   28           | expression • LE expression
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    LE   error (nonassociative)
    '='  error (nonassociative)

    '<'       [reduce using rule 25 (expression)]
    $default  reduce using rule 25 (expression)


State 101

   21 expression: expression • '+' expression
   21           | expression '+' expression •
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    '<'       [reduce using rule 21 (expression)]
    $default  reduce using rule 21 (expression)


State 102

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   22           | expression '-' expression •
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    '<'       [reduce using rule 22 (expression)]
    $default  reduce using rule 22 (expression)


State 103

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   23           | expression '*' expression •
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    '<'       [reduce using rule 23 (expression)]
    $default  reduce using rule 23 (expression)


State 104

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   24           | expression '/' expression •
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    '<'       [reduce using rule 24 (expression)]
    $default  reduce using rule 24 (expression)


State 105

   62 dispatch: expression '@' TYPEID • '.' OBJECTID '(' expression_list ')'

    '.'  shift, and go to state 119


State 106

   61 dispatch: expression '.' OBJECTID • '(' expression_list ')'

    '('  shift, and go to state 120


State 107

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   27           | expression '<' expression •
   28           | expression • LE expression
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    LE        [reduce using rule 27 (expression)]
    '='       [reduce using rule 27 (expression)]
    '+'       [reduce using rule 27 (expression)]
    '-'       [reduce using rule 27 (expression)]
    '*'       [reduce using rule 27 (expression)]
    '/'       [reduce using rule 27 (expression)]
    '@'       [reduce using rule 27 (expression)]
    '.'       [reduce using rule 27 (expression)]
    '<'       [reduce using rule 27 (expression)]
    $default  reduce using rule 27 (expression)


State 108

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' • expression '}' ';'

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 121
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 109

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'
   63 if: IF expression THEN expression • ELSE expression FI

    ELSE  shift, and go to state 122
    LE    shift, and go to state 76
    '='   shift, and go to state 77
    '+'   shift, and go to state 78
    '-'   shift, and go to state 79
    '*'   shift, and go to state 80
    '/'   shift, and go to state 81
    '@'   shift, and go to state 82
    '.'   shift, and go to state 83
    '<'   shift, and go to state 85


State 110

   43 let_list: OBJECTID ':' TYPEID • IN expression
   44         | OBJECTID ':' TYPEID • ASSIGN expression IN expression
   45         | OBJECTID ':' TYPEID • ',' let_list
   46         | OBJECTID ':' TYPEID • ASSIGN expression ',' let_list

    IN      shift, and go to state 123
    ASSIGN  shift, and go to state 124
    ','     shift, and go to state 125


State 111

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   59 while: WHILE expression LOOP expression • POOL
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    POOL  shift, and go to state 126
    LE    shift, and go to state 76
    '='   shift, and go to state 77
    '+'   shift, and go to state 78
    '-'   shift, and go to state 79
    '*'   shift, and go to state 80
    '/'   shift, and go to state 81
    '@'   shift, and go to state 82
    '.'   shift, and go to state 83
    '<'   shift, and go to state 85


State 112

   55 branch: OBJECTID • ':' TYPEID DARROW expression ';'

    ':'  shift, and go to state 127


State 113

   56 branch_list: branch •

    $default  reduce using rule 56 (branch_list)


State 114

   57 branch_list: branch_list • branch
   58 typecase: CASE expression OF branch_list • ESAC

    ESAC      shift, and go to state 128
    OBJECTID  shift, and go to state 112

    branch  go to state 129


State 115

   30 expression: OBJECTID ':' TYPEID ASSIGN • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 130
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 116

   60 dispatch: OBJECTID '(' expression_list ')' •

    $default  reduce using rule 60 (dispatch)


State 117

   49 expression_list: expression_list ',' • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 131
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 118

   51 expression_block: expression_block expression ';' •

    $default  reduce using rule 51 (expression_block)


State 119

   62 dispatch: expression '@' TYPEID '.' • OBJECTID '(' expression_list ')'

    OBJECTID  shift, and go to state 132


State 120

   61 dispatch: expression '.' OBJECTID '(' • expression_list ')'

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    ')'  reduce using rule 47 (expression_list)
    ','  reduce using rule 47 (expression_list)

    expression       go to state 93
    expression_list  go to state 133
    new              go to state 51
    is_void          go to state 52
    typecase         go to state 53
    while            go to state 54
    dispatch         go to state 55
    if               go to state 56


State 121

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression • '}' ';'
   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '}'  shift, and go to state 134
    '<'  shift, and go to state 85


State 122

   63 if: IF expression THEN expression ELSE • expression FI

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 135
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 123

   43 let_list: OBJECTID ':' TYPEID IN • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 136
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 124

   44 let_list: OBJECTID ':' TYPEID ASSIGN • expression IN expression
   46         | OBJECTID ':' TYPEID ASSIGN • expression ',' let_list

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 137
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 125

   45 let_list: OBJECTID ':' TYPEID ',' • let_list

    OBJECTID  shift, and go to state 61

    let_list  go to state 138


State 126

   59 while: WHILE expression LOOP expression POOL •

    $default  reduce using rule 59 (while)


State 127

   55 branch: OBJECTID ':' • TYPEID DARROW expression ';'

    TYPEID  shift, and go to state 139


State 128

   58 typecase: CASE expression OF branch_list ESAC •

    $default  reduce using rule 58 (typecase)


State 129

   57 branch_list: branch_list branch •

    $default  reduce using rule 57 (branch_list)


State 130

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   30           | OBJECTID ':' TYPEID ASSIGN expression •
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    '<'       [reduce using rule 30 (expression)]
    $default  reduce using rule 30 (expression)


State 131

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   49 expression_list: expression_list ',' expression •
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    $default  reduce using rule 49 (expression_list)


State 132

   62 dispatch: expression '@' TYPEID '.' OBJECTID • '(' expression_list ')'

    '('  shift, and go to state 140


State 133

   49 expression_list: expression_list • ',' expression
   61 dispatch: expression '.' OBJECTID '(' expression_list • ')'

    ')'  shift, and go to state 141
    ','  shift, and go to state 117


State 134

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' • ';'

    ';'  shift, and go to state 142


State 135

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'
   63 if: IF expression THEN expression ELSE expression • FI

    FI   shift, and go to state 143
    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85


State 136

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   43 let_list: OBJECTID ':' TYPEID IN expression •
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    LE        [reduce using rule 43 (let_list)]
    '='       [reduce using rule 43 (let_list)]
    '+'       [reduce using rule 43 (let_list)]
    '-'       [reduce using rule 43 (let_list)]
    '*'       [reduce using rule 43 (let_list)]
    '/'       [reduce using rule 43 (let_list)]
    '@'       [reduce using rule 43 (let_list)]
    '.'       [reduce using rule 43 (let_list)]
    '<'       [reduce using rule 43 (let_list)]
    $default  reduce using rule 43 (let_list)


State 137

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   44 let_list: OBJECTID ':' TYPEID ASSIGN expression • IN expression
   46         | OBJECTID ':' TYPEID ASSIGN expression • ',' let_list
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    IN   shift, and go to state 144
    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    ','  shift, and go to state 145
    '<'  shift, and go to state 85


State 138

   45 let_list: OBJECTID ':' TYPEID ',' let_list •

    $default  reduce using rule 45 (let_list)


State 139

   55 branch: OBJECTID ':' TYPEID • DARROW expression ';'

    DARROW  shift, and go to state 146


State 140

   62 dispatch: expression '@' TYPEID '.' OBJECTID '(' • expression_list ')'

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    ')'  reduce using rule 47 (expression_list)
    ','  reduce using rule 47 (expression_list)

    expression       go to state 93
    expression_list  go to state 147
    new              go to state 51
    is_void          go to state 52
    typecase         go to state 53
    while            go to state 54
    dispatch         go to state 55
    if               go to state 56


State 141

   61 dispatch: expression '.' OBJECTID '(' expression_list ')' •

    $default  reduce using rule 61 (dispatch)


State 142

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' ';' •

    $default  reduce using rule 8 (feature)


State 143

   63 if: IF expression THEN expression ELSE expression FI •

    $default  reduce using rule 63 (if)


State 144

   44 let_list: OBJECTID ':' TYPEID ASSIGN expression IN • expression

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 148
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 145

   46 let_list: OBJECTID ':' TYPEID ASSIGN expression ',' • let_list

    OBJECTID  shift, and go to state 61

    let_list  go to state 149


State 146

   55 branch: OBJECTID ':' TYPEID DARROW • expression ';'

    error       shift, and go to state 35
    IF          shift, and go to state 36
    LET         shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '('         shift, and go to state 49

    expression  go to state 150
    new         go to state 51
    is_void     go to state 52
    typecase    go to state 53
    while       go to state 54
    dispatch    go to state 55
    if          go to state 56


State 147

   49 expression_list: expression_list • ',' expression
   62 dispatch: expression '@' TYPEID '.' OBJECTID '(' expression_list • ')'

    ')'  shift, and go to state 151
    ','  shift, and go to state 117


State 148

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   44 let_list: OBJECTID ':' TYPEID ASSIGN expression IN expression •
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    '<'  shift, and go to state 85

    LE        [reduce using rule 44 (let_list)]
    '='       [reduce using rule 44 (let_list)]
    '+'       [reduce using rule 44 (let_list)]
    '-'       [reduce using rule 44 (let_list)]
    '*'       [reduce using rule 44 (let_list)]
    '/'       [reduce using rule 44 (let_list)]
    '@'       [reduce using rule 44 (let_list)]
    '.'       [reduce using rule 44 (let_list)]
    '<'       [reduce using rule 44 (let_list)]
    $default  reduce using rule 44 (let_list)


State 149

   46 let_list: OBJECTID ':' TYPEID ASSIGN expression ',' let_list •

    $default  reduce using rule 46 (let_list)


State 150

   21 expression: expression • '+' expression
   22           | expression • '-' expression
   23           | expression • '*' expression
   24           | expression • '/' expression
   25           | expression • '=' expression
   27           | expression • '<' expression
   28           | expression • LE expression
   55 branch: OBJECTID ':' TYPEID DARROW expression • ';'
   61 dispatch: expression • '.' OBJECTID '(' expression_list ')'
   62         | expression • '@' TYPEID '.' OBJECTID '(' expression_list ')'

    LE   shift, and go to state 76
    '='  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83
    ';'  shift, and go to state 152
    '<'  shift, and go to state 85


State 151

   62 dispatch: expression '@' TYPEID '.' OBJECTID '(' expression_list ')' •

    $default  reduce using rule 62 (dispatch)


State 152

   55 branch: OBJECTID ':' TYPEID DARROW expression ';' •

    $default  reduce using rule 55 (branch)
